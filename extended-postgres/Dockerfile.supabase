# Debian 11 (bullseye) has glibc 2.31.
# If you are using "physical" mode, please check the glibc version in your production database system to avoid potential index corruption.
# You should have the same version of glibc as in your Docker image.

ARG PG_SERVER_VERSION=14
ARG BASE_IMAGE_NAME
ARG BASE_COMMIT_REF

# Build the extended-postgres image
FROM ${BASE_IMAGE_NAME}:${PG_SERVER_VERSION}${BASE_COMMIT_REF} as build-env

ARG PG_SERVER_VERSION
ENV PG_SERVER_VERSION=${PG_SERVER_VERSION:-14}

ARG PG_GRAPHQL_VERSION
ENV PG_GRAPHQL_VERSION=${PG_GRAPHQL_VERSION:-0.4.1}

ARG PG_JSONSCHEMA_VERSION
ENV PG_JSONSCHEMA_VERSION=${PG_JSONSCHEMA_VERSION:-0.1.1}

ARG HTTP_VERSION
ENV HTTP_VERSION=${HTTP_VERSION:-1.5.0}

ARG PG_NET_VERSION
ENV PG_NET_VERSION=${PG_NET_VERSION:-0.6.1}

ARG PGSODIUM_VERSION
ENV PGSODIUM_VERSION=${PGSODIUM_VERSION:-3.0.5}

ARG POSTGIS_VERSION
ENV POSTGIS_VERSION=${POSTGIS_VERSION:-3}

ARG PLV8_VERSION
ENV PLV8_VERSION=${PLV8_VERSION:-3.1.4}

COPY plv8.tar.gz /tmp/plv8.tar.gz

ADD ./extended-postgres/se/supabase.sh /
RUN chmod +x /supabase.sh
RUN /supabase.sh


# Build the extended-postgres image
FROM ${BASE_IMAGE_NAME}:${PG_SERVER_VERSION}${BASE_COMMIT_REF}
LABEL maintainer="postgres.ai"

ARG PG_SERVER_VERSION
ENV PG_SERVER_VERSION=${PG_SERVER_VERSION:-14}

# copy PostgreSQL extensions from build-env
COPY --from=build-env --chown=root:root /usr/share/postgresql/ /usr/share/postgresql/
COPY --from=build-env --chown=root:root /usr/lib/postgresql/ /usr/lib/postgresql/

# libgraphqlparser
ENV LD_LIBRARY_PATH="/usr/local/lib:${LD_LIBRARY_PATH}"
COPY --from=build-env ["/usr/local/lib/libgraphqlparser.so", "/usr/local/lib/libgraphqlparser.so"]

EXPOSE 5432

# Prepare Postgres start script
RUN echo "#!/bin/bash" > /pg_start.sh && chmod a+x /pg_start.sh \
    && echo "chown -R postgres:postgres \${PGDATA} /var/run/postgresql" \
      >> /pg_start.sh \
    && printf "sudo -Eu postgres /usr/lib/postgresql/$(echo ${PG_SERVER_VERSION} | sed 's/beta.*//' | sed 's/rc.*//')/bin/postgres -D \${PGDATA} >& /proc/1/fd/1 \n" \
      >> /pg_start.sh \
    # Infinite sleep to allow restarting Postgres
    && echo "/bin/bash -c \"trap : TERM INT; sleep infinity & wait\"" \
      >> /pg_start.sh

CMD ["/pg_start.sh"]
